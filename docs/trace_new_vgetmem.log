connection 'backend', class 'vmware', host 'blade1g6-6'
Client (tcp-l) 0 (fd: 5) joined


(command-mode) d
file: xinu.elf
connection 'backend-dl', class 'DOWNLOAD', host 'blade1g6-6'
100 -rw-rw-rw- 1 root 94820 Mar 30 backend
cp-bootable complete



(command-mode) p
connection 'backend-pc', class 'POWERCYCLE', host 'blade1g6-6'
Client (named) 1 (fd: 6) joined

system running up!
DBG$ 0 sysinit> start
DBG$ 0 init_bsm> start
DBG$ 0 init_bsm> bsm_tab initialized
DBG$ 0 init_bsm> end
DBG$ 0 init_frm_tab> start
DBG$ 0 init_frm_tab> frm_tab initialized
DBG$ 0 init_frm_tab> end
DBG$ 0 init_global_pgt> start
DBG$ 0 new_pgt> start
DBG$ 0 get_frm> start
DBG$ 0 get_frm> returning free frame 0
DBG$ 0 get_frm> before allocaing a new frame..
DBG$ 0 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1024
# of used frames: 0
# of page frames: 0
# of pt frames: 0
# of pd frames: 0
*** FRAME DEBUG DATA END ***

DBG$ 0 print_frm_data> end
DBG$ 0 get_frm> after allocaing a new frame..
DBG$ 0 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1023
# of used frames: 1
# of page frames: 0
# of pt frames: 1
# of pd frames: 0
*** FRAME DEBUG DATA END ***

DBG$ 0 print_frm_data> end
DBG$ 0 get_frm> returning valid new_frm
DBG$ 0 get_frm> end
DBG$ 0 init_pgt> start
DBG$ 0 init_pgt> pgt initialized
DBG$ 0 init_pgt> end
DBG$ 0 new_pgt> returning new pgt at 0x00400000
DBG$ 0 new_pgt> end
DBG$ 0 init_global_pgt> global pt is at 0x00400000
DBG$ 0 new_pgt> start
DBG$ 0 get_frm> start
DBG$ 0 get_frm> returning free frame 1
DBG$ 0 get_frm> before allocaing a new frame..
DBG$ 0 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1023
# of used frames: 1
# of page frames: 0
# of pt frames: 1
# of pd frames: 0
*** FRAME DEBUG DATA END ***

DBG$ 0 print_frm_data> end
DBG$ 0 get_frm> after allocaing a new frame..
DBG$ 0 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1022
# of used frames: 2
# of page frames: 0
# of pt frames: 2
# of pd frames: 0
*** FRAME DEBUG DATA END ***

DBG$ 0 print_frm_data> end
DBG$ 0 get_frm> returning valid new_frm
DBG$ 0 get_frm> end
DBG$ 0 init_pgt> start
DBG$ 0 init_pgt> pgt initialized
DBG$ 0 init_pgt> end
DBG$ 0 new_pgt> returning new pgt at 0x00401000
DBG$ 0 new_pgt> end
DBG$ 0 init_global_pgt> global pt is at 0x00401000
DBG$ 0 new_pgt> start
DBG$ 0 get_frm> start
DBG$ 0 get_frm> returning free frame 2
DBG$ 0 get_frm> before allocaing a new frame..
DBG$ 0 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1022
# of used frames: 2
# of page frames: 0
# of pt frames: 2
# of pd frames: 0
*** FRAME DEBUG DATA END ***

DBG$ 0 print_frm_data> end
DBG$ 0 get_frm> after allocaing a new frame..
DBG$ 0 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1021
# of used frames: 3
# of page frames: 0
# of pt frames: 3
# of pd frames: 0
*** FRAME DEBUG DATA END ***

DBG$ 0 print_frm_data> end
DBG$ 0 get_frm> returning valid new_frm
DBG$ 0 get_frm> end
DBG$ 0 init_pgt> start
DBG$ 0 init_pgt> pgt initialized
DBG$ 0 init_pgt> end
DBG$ 0 new_pgt> returning new pgt at 0x00402000
DBG$ 0 new_pgt> end
DBG$ 0 init_global_pgt> global pt is at 0x00402000
DBG$ 0 new_pgt> start
DBG$ 0 get_frm> start
DBG$ 0 get_frm> returning free frame 3
DBG$ 0 get_frm> before allocaing a new frame..
DBG$ 0 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1021
# of used frames: 3
# of page frames: 0
# of pt frames: 3
# of pd frames: 0
*** FRAME DEBUG DATA END ***

DBG$ 0 print_frm_data> end
DBG$ 0 get_frm> after allocaing a new frame..
DBG$ 0 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1020
# of used frames: 4
# of page frames: 0
# of pt frames: 4
# of pd frames: 0
*** FRAME DEBUG DATA END ***

DBG$ 0 print_frm_data> end
DBG$ 0 get_frm> returning valid new_frm
DBG$ 0 get_frm> end
DBG$ 0 init_pgt> start
DBG$ 0 init_pgt> pgt initialized
DBG$ 0 init_pgt> end
DBG$ 0 new_pgt> returning new pgt at 0x00403000
DBG$ 0 new_pgt> end
DBG$ 0 init_global_pgt> global pt is at 0x00403000
DBG$ 0 init_global_pgt> global pgt initialized
DBG$ 0 init_global_pgt> end
DBG$ 0 new_pgd> start
DBG$ 0 get_frm> start
DBG$ 0 get_frm> returning free frame 4
DBG$ 0 get_frm> before allocaing a new frame..
DBG$ 0 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1020
# of used frames: 4
# of page frames: 0
# of pt frames: 4
# of pd frames: 0
*** FRAME DEBUG DATA END ***

DBG$ 0 print_frm_data> end
DBG$ 0 get_frm> after allocaing a new frame..
DBG$ 0 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1019
# of used frames: 5
# of page frames: 0
# of pt frames: 4
# of pd frames: 1
*** FRAME DEBUG DATA END ***

DBG$ 0 print_frm_data> end
DBG$ 0 get_frm> returning valid new_frm
DBG$ 0 get_frm> end
DBG$ 0 new_pgd> pgd at 0x00404000 is being returned
DBG$ 0 new_pgd> end
DBG$ 0 set_pdbr> start
DBG$ 0 set_pdbr> pd_addr after ls 0x00404000
DBG$ 0 set_pdbr> end
DBG$ 0 enable_paging> start
DBG$ 0 enable_paging> end
DBG$ 0 sysinit> end


PC Xinu (CSC501 1-2009 base) #1 (adhanas@bn16-142.dcs.mcnc.org) Sun Mar 30 03:33:10 EDT 2014

4194304 bytes real mem
141803 bytes Xinu code
clock enabled
DBG$ 0 new_pgd> start
DBG$ 0 get_frm> start
DBG$ 0 get_frm> returning free frame 5
DBG$ 0 get_frm> before allocaing a new frame..
DBG$ 0 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1019
# of used frames: 5
# of page frames: 0
# of pt frames: 4
# of pd frames: 1
*** FRAME DEBUG DATA END ***

DBG$ 0 print_frm_data> end
DBG$ 0 get_frm> after allocaing a new frame..
DBG$ 0 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1018
# of used frames: 6
# of page frames: 0
# of pt frames: 4
# of pd frames: 2
*** FRAME DEBUG DATA END ***

DBG$ 0 print_frm_data> end
DBG$ 0 get_frm> returning valid new_frm
DBG$ 0 get_frm> end
DBG$ 0 new_pgd> pgd at 0x00405000 is being returned
DBG$ 0 new_pgd> end
DBG$ 0 create> pid 49 pgd at 0x00405000 in fr id 5
DBG$ 0 print_pdbr> start

*** PID PDBR VALUE START ***
0   0x00404000
49   0x00405000
*** PID PDBR VALUE END ***

DBG$ 0 print_pdbr> end
DBG$ 49 set_pdbr> start
DBG$ 49 set_pdbr> pd_addr after ls 0x00405000
DBG$ 49 set_pdbr> end
before newproc in main.. 
0x00800000: 
0x00801000: 
0x00802000: 
0x00803000: 
0x00804000: 
DBG$ 49 vcreate> start
DBG$ 49 new_pgd> start
DBG$ 49 get_frm> start
DBG$ 49 get_frm> returning free frame 6
DBG$ 49 get_frm> before allocaing a new frame..
DBG$ 49 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1018
# of used frames: 6
# of page frames: 0
# of pt frames: 4
# of pd frames: 2
*** FRAME DEBUG DATA END ***

DBG$ 49 print_frm_data> end
DBG$ 49 get_frm> after allocaing a new frame..
DBG$ 49 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1017
# of used frames: 7
# of page frames: 0
# of pt frames: 4
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 49 print_frm_data> end
DBG$ 49 get_frm> returning valid new_frm
DBG$ 49 get_frm> end
DBG$ 49 new_pgd> pgd at 0x00406000 is being returned
DBG$ 49 new_pgd> end
DBG$ 49 create> pid 48 pgd at 0x00406000 in fr id 6
DBG$ 49 print_pdbr> start

*** PID PDBR VALUE START ***
0   0x00404000
48   0x00406000
49   0x00405000
*** PID PDBR VALUE END ***

DBG$ 49 print_pdbr> end
DBG$ 49 get_bsm> start
DBG$ 49 get_bsm> bs id 0 is free
DBG$ 49 get_bsm> end
DBG$ 49 bsm_map> start
DBG$ 49 bsm_map> bs mapping for pid 48, bs id 0, vpage 4096, npages 100 is successful
DBG$ 49 bsm_map> end
DBG$ 49 vcreate> vstart 0x00028c68, vloc 0x01000000, vlen 409600, ploc 0x00028c78
DBG$ 49 vcreate> vend 0x00028c78, vloc 0x01064000, vlen 0, ploc 0x00000000
DBG$ 49 vcreate> new proc with pid 48, vheap of size 100 pages created successfully
DBG$ 49 vcreate> end
DBG$ 48 set_pdbr> start
DBG$ 48 set_pdbr> pd_addr after ls 0x00406000
DBG$ 48 set_pdbr> end
DBG$ 48 vgetmem> start
DBG$ 48 vgetmem> nbytes 2000
DBG$ 48 vgetmem> curr vloc 0x01000000, vlen 409600, ploc 0x00028c78
DBG$ 48 vgetmem> end
vloc in DBG$ 48 pf_handler> start
DBG$ 48 pf_handler> inside high-level page fault handler
DBG$ 48 pf_handler> faulted vaddr 0x01000000, vpage 4096
DBG$ 48 pf_handler> pd 4, pt 0, pg 0
DBG$ 48 bsm_lookup> start
DBG$ 48 bsm_lookup> store 0, offset 0 for pid 48, vaddr 0x01000000, vpage 4096
DBG$ 48 bsm_lookup> end
DBG$ 48 pf_handler> pgt not present for pid 48, pd offset 4, pt offset 0, pg offset 0, vaddr 0x003fdeec
DBG$ 48 new_pgt> start
DBG$ 48 get_frm> start
DBG$ 48 get_frm> returning free frame 7
DBG$ 48 get_frm> before allocaing a new frame..
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1017
# of used frames: 7
# of page frames: 0
# of pt frames: 4
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 get_frm> after allocaing a new frame..
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1016
# of used frames: 8
# of page frames: 0
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 get_frm> returning valid new_frm
DBG$ 48 get_frm> end
DBG$ 48 init_pgt> start
DBG$ 48 init_pgt> pgt initialized
DBG$ 48 init_pgt> end
DBG$ 48 new_pgt> returning new pgt at 0x00407000
DBG$ 48 new_pgt> end
DBG$ 48 pf_handler> ptbl present at 0x00407000, fr id 7
DBG$ 48 is_frm_present> start
DBG$ 48 is_frm_present> couldn't find a frame with bs id 0 and offset 0
DBG$ 48 is_frm_present> returning EMPTY
DBG$ 48 is_frm_present> end
DBG$ 48 pf_handler> frame not present.. creating a new frame
DBG$ 48 get_frm> start
DBG$ 48 get_frm> returning free frame 8
DBG$ 48 get_frm> before allocaing a new frame..
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1016
# of used frames: 8
# of page frames: 0
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 get_frm> after allocaing a new frame..
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1015
# of used frames: 9
# of page frames: 1
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 get_frm> returning valid new_frm
DBG$ 48 get_frm> end
DBG$ 48 read_bs> start
DBG$ 48 read_bs> fr pa 0x00408000
DBG$ 48 read_bs> bs pa 0x00800000
DBG$ 48 read_bs> bs value 
DBG$ 48 read_bs> end
DBG$ 48 pf_handler> reading for fr id 8, bs 0, offset 0
DBG$ 48 inc_frm_refcount> start
DBG$ 48 inc_frm_refcount> fr id 8 refcount incremented to 1
DBG$ 48 inc_frm_refcount> end
DBG$ 48 print_frm_id> start

*** FRAME INFORMATION START ***
Frame ID     : 8
Frame status : In Use
Frame PID    : -1
Frame vpage  : 0
Frame refcnt : 1
Frame type   : Data page
Frame BS     : 0
Frame offset : 0
*** FRAME INFORMATION END ***

DBG$ 48 print_frm_id> end
DBG$ 48 inc_frm_refcount> start
DBG$ 48 inc_frm_refcount> fr id 7 refcount incremented to 1
DBG$ 48 inc_frm_refcount> end
DBG$ 48 enable_paging> start
DBG$ 48 enable_paging> end
DBG$ 48 pf_handler> returning OK
DBG$ 48 pf_handler> end
 is 0x000008a4
DBG$ 48 pf_handler> start
DBG$ 48 pf_handler> inside high-level page fault handler
DBG$ 48 pf_handler> faulted vaddr 0x01001000, vpage 4097
DBG$ 48 pf_handler> pd 4, pt 1, pg 0
DBG$ 48 bsm_lookup> start
DBG$ 48 bsm_lookup> store 0, offset 1 for pid 48, vaddr 0x01001000, vpage 4097
DBG$ 48 bsm_lookup> end
DBG$ 48 pf_handler> ptbl present at 0x00000407, fr id -1024
DBG$ 48 pf_handler> ptbl present at 0x00407000, fr id 7
DBG$ 48 is_frm_present> start
DBG$ 48 is_frm_present> couldn't find a frame with bs id 0 and offset 1
DBG$ 48 is_frm_present> returning EMPTY
DBG$ 48 is_frm_present> end
DBG$ 48 pf_handler> frame not present.. creating a new frame
DBG$ 48 get_frm> start
DBG$ 48 get_frm> returning free frame 9
DBG$ 48 get_frm> before allocaing a new frame..
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1015
# of used frames: 9
# of page frames: 1
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 get_frm> after allocaing a new frame..
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1014
# of used frames: 10
# of page frames: 2
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 get_frm> returning valid new_frm
DBG$ 48 get_frm> end
DBG$ 48 read_bs> start
DBG$ 48 read_bs> fr pa 0x00409000
DBG$ 48 read_bs> bs pa 0x00801000
DBG$ 48 read_bs> bs value 
DBG$ 48 read_bs> end
DBG$ 48 pf_handler> reading for fr id 9, bs 0, offset 1
DBG$ 48 inc_frm_refcount> start
DBG$ 48 inc_frm_refcount> fr id 9 refcount incremented to 1
DBG$ 48 inc_frm_refcount> end
DBG$ 48 print_frm_id> start

*** FRAME INFORMATION START ***
Frame ID     : 9
Frame status : In Use
Frame PID    : -1
Frame vpage  : 0
Frame refcnt : 1
Frame type   : Data page
Frame BS     : 0
Frame offset : 1
*** FRAME INFORMATION END ***

DBG$ 48 print_frm_id> end
DBG$ 48 inc_frm_refcount> start
DBG$ 48 inc_frm_refcount> fr id 7 refcount incremented to 2
DBG$ 48 inc_frm_refcount> end
DBG$ 48 enable_paging> start
DBG$ 48 enable_paging> end
DBG$ 48 pf_handler> returning OK
DBG$ 48 pf_handler> end
DBG$ 48 pf_handler> start
DBG$ 48 pf_handler> inside high-level page fault handler
DBG$ 48 pf_handler> faulted vaddr 0x01002000, vpage 4098
DBG$ 48 pf_handler> pd 4, pt 2, pg 0
DBG$ 48 bsm_lookup> start
DBG$ 48 bsm_lookup> store 0, offset 2 for pid 48, vaddr 0x01002000, vpage 4098
DBG$ 48 bsm_lookup> end
DBG$ 48 pf_handler> ptbl present at 0x00000407, fr id -1024
DBG$ 48 pf_handler> ptbl present at 0x00407000, fr id 7
DBG$ 48 is_frm_present> start
DBG$ 48 is_frm_present> couldn't find a frame with bs id 0 and offset 2
DBG$ 48 is_frm_present> returning EMPTY
DBG$ 48 is_frm_present> end
DBG$ 48 pf_handler> frame not present.. creating a new frame
DBG$ 48 get_frm> start
DBG$ 48 get_frm> returning free frame 10
DBG$ 48 get_frm> before allocaing a new frame..
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1014
# of used frames: 10
# of page frames: 2
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 get_frm> after allocaing a new frame..
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1013
# of used frames: 11
# of page frames: 3
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 get_frm> returning valid new_frm
DBG$ 48 get_frm> end
DBG$ 48 read_bs> start
DBG$ 48 read_bs> fr pa 0x0040a000
DBG$ 48 read_bs> bs pa 0x00802000
DBG$ 48 read_bs> bs value 
DBG$ 48 read_bs> end
DBG$ 48 pf_handler> reading for fr id 10, bs 0, offset 2
DBG$ 48 inc_frm_refcount> start
DBG$ 48 inc_frm_refcount> fr id 10 refcount incremented to 1
DBG$ 48 inc_frm_refcount> end
DBG$ 48 print_frm_id> start

*** FRAME INFORMATION START ***
Frame ID     : 10
Frame status : In Use
Frame PID    : -1
Frame vpage  : 0
Frame refcnt : 1
Frame type   : Data page
Frame BS     : 0
Frame offset : 2
*** FRAME INFORMATION END ***

DBG$ 48 print_frm_id> end
DBG$ 48 inc_frm_refcount> start
DBG$ 48 inc_frm_refcount> fr id 7 refcount incremented to 3
DBG$ 48 inc_frm_refcount> end
DBG$ 48 enable_paging> start
DBG$ 48 enable_paging> end
DBG$ 48 pf_handler> returning OK
DBG$ 48 pf_handler> end
DBG$ 48 pf_handler> start
DBG$ 48 pf_handler> inside high-level page fault handler
DBG$ 48 pf_handler> faulted vaddr 0x01003000, vpage 4099
DBG$ 48 pf_handler> pd 4, pt 3, pg 0
DBG$ 48 bsm_lookup> start
DBG$ 48 bsm_lookup> store 0, offset 3 for pid 48, vaddr 0x01003000, vpage 4099
DBG$ 48 bsm_lookup> end
DBG$ 48 pf_handler> ptbl present at 0x00000407, fr id -1024
DBG$ 48 pf_handler> ptbl present at 0x00407000, fr id 7
DBG$ 48 is_frm_present> start
DBG$ 48 is_frm_present> couldn't find a frame with bs id 0 and offset 3
DBG$ 48 is_frm_present> returning EMPTY
DBG$ 48 is_frm_present> end
DBG$ 48 pf_handler> frame not present.. creating a new frame
DBG$ 48 get_frm> start
DBG$ 48 get_frm> returning free frame 11
DBG$ 48 get_frm> before allocaing a new frame..
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1013
# of used frames: 11
# of page frames: 3
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 get_frm> after allocaing a new frame..
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1012
# of used frames: 12
# of page frames: 4
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 get_frm> returning valid new_frm
DBG$ 48 get_frm> end
DBG$ 48 read_bs> start
DBG$ 48 read_bs> fr pa 0x0040b000
DBG$ 48 read_bs> bs pa 0x00803000
DBG$ 48 read_bs> bs value 
DBG$ 48 read_bs> end
DBG$ 48 pf_handler> reading for fr id 11, bs 0, offset 3
DBG$ 48 inc_frm_refcount> start
DBG$ 48 inc_frm_refcount> fr id 11 refcount incremented to 1
DBG$ 48 inc_frm_refcount> end
DBG$ 48 print_frm_id> start

*** FRAME INFORMATION START ***
Frame ID     : 11
Frame status : In Use
Frame PID    : -1
Frame vpage  : 0
Frame refcnt : 1
Frame type   : Data page
Frame BS     : 0
Frame offset : 3
*** FRAME INFORMATION END ***

DBG$ 48 print_frm_id> end
DBG$ 48 inc_frm_refcount> start
DBG$ 48 inc_frm_refcount> fr id 7 refcount incremented to 4
DBG$ 48 inc_frm_refcount> end
DBG$ 48 enable_paging> start
DBG$ 48 enable_paging> end
DBG$ 48 pf_handler> returning OK
DBG$ 48 pf_handler> end
DBG$ 48 pf_handler> start
DBG$ 48 pf_handler> inside high-level page fault handler
DBG$ 48 pf_handler> faulted vaddr 0x01004000, vpage 4100
DBG$ 48 pf_handler> pd 4, pt 4, pg 0
DBG$ 48 bsm_lookup> start
DBG$ 48 bsm_lookup> store 0, offset 4 for pid 48, vaddr 0x01004000, vpage 4100
DBG$ 48 bsm_lookup> end
DBG$ 48 pf_handler> ptbl present at 0x00000407, fr id -1024
DBG$ 48 pf_handler> ptbl present at 0x00407000, fr id 7
DBG$ 48 is_frm_present> start
DBG$ 48 is_frm_present> couldn't find a frame with bs id 0 and offset 4
DBG$ 48 is_frm_present> returning EMPTY
DBG$ 48 is_frm_present> end
DBG$ 48 pf_handler> frame not present.. creating a new frame
DBG$ 48 get_frm> start
DBG$ 48 get_frm> returning free frame 12
DBG$ 48 get_frm> before allocaing a new frame..
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1012
# of used frames: 12
# of page frames: 4
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 get_frm> after allocaing a new frame..
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1011
# of used frames: 13
# of page frames: 5
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 get_frm> returning valid new_frm
DBG$ 48 get_frm> end
DBG$ 48 read_bs> start
DBG$ 48 read_bs> fr pa 0x0040c000
DBG$ 48 read_bs> bs pa 0x00804000
DBG$ 48 read_bs> bs value 
DBG$ 48 read_bs> end
DBG$ 48 pf_handler> reading for fr id 12, bs 0, offset 4
DBG$ 48 inc_frm_refcount> start
DBG$ 48 inc_frm_refcount> fr id 12 refcount incremented to 1
DBG$ 48 inc_frm_refcount> end
DBG$ 48 print_frm_id> start

*** FRAME INFORMATION START ***
Frame ID     : 12
Frame status : In Use
Frame PID    : -1
Frame vpage  : 0
Frame refcnt : 1
Frame type   : Data page
Frame BS     : 0
Frame offset : 4
*** FRAME INFORMATION END ***

DBG$ 48 print_frm_id> end
DBG$ 48 inc_frm_refcount> start
DBG$ 48 inc_frm_refcount> fr id 7 refcount incremented to 5
DBG$ 48 inc_frm_refcount> end
DBG$ 48 enable_paging> start
DBG$ 48 enable_paging> end
DBG$ 48 pf_handler> returning OK
DBG$ 48 pf_handler> end
data in procA..
0x01000000: A
0x01001000: B
DBG$ 49 set_pdbr> start
DBG$ 49 set_pdbr> pd_addr after ls 0x00405000
DBG$ 49 set_pdbr> end
DBG$ 48 set_pdbr> start
DBG$ 48 set_pdbr> pd_addr after ls 0x00406000
DBG$ 48 set_pdbr> end
0x01002000: C
0x01003000: D
0x01004000: E
DBG$ 0 set_pdbr> start
DBG$ 0 set_pdbr> pd_addr after ls 0x00404000
DBG$ 0 set_pdbr> end


(command-mode) c
DBG$ 48 set_pdbr> start
DBG$ 48 set_pdbr> pd_addr after ls 0x00406000
DBG$ 48 set_pdbr> end
DBG$ 48 kill> before bsm_handle_proc_kill()
DBG$ 48 bsm_handle_proc_kill> start
DBG$ 48 bsm_remove_proc_maps> start
DBG$ 48 bsm_remove_frm> start
DBG$ 48 bsm_remove_frm> decrementing refcount for fr id 8, bs id 0, bs offset 0, pid 48
DBG$ 48 dec_frm_refcount> start
DBG$ 48 dec_frm_refcount> fr id 8 refcount decremented to 0
DBG$ 48 dec_frm_refcount> fr id 8 refcount reached 0.. freeing the frame
DBG$ 48 free_frm> start
DBG$ 48 print_frm_id> start

*** FRAME INFORMATION START ***
Frame ID     : 8
Frame status : In Use
Frame PID    : -1
Frame vpage  : 0
Frame refcnt : 0
Frame type   : Data page
Frame BS     : 0
Frame offset : 0
*** FRAME INFORMATION END ***

DBG$ 48 print_frm_id> end
DBG$ 48 update_pgt> start
DBG$ 48 update_pgt> in_pid -1
DBG$ 48 update_pgt> pid 48, pt id 4, page id 0
DBG$ 48 dec_frm_refcount> start
DBG$ 48 dec_frm_refcount> fr id 7 refcount decremented to 4
DBG$ 48 dec_frm_refcount> end
DBG$ 48 update_pgt> pid 48, pt 4, page 0, fr id 8, dirty 1
DBG$ 48 update_pgt> clearing pres bit in pgt for pid 48, pgt 4, pg 0, fr id 8
DBG$ 48 update_pgt> pid 48, pt id 4, page id 1
DBG$ 48 update_pgt> pid 48, pt id 4, page id 2
DBG$ 48 update_pgt> pid 48, pt id 4, page id 3
DBG$ 48 update_pgt> pid 48, pt id 4, page id 4
DBG$ 48 enable_paging> start
DBG$ 48 enable_paging> end
DBG$ 48 update_pgt> end
DBG$ 48 write_bs> start
DBG$ 48 write_bs> end
DBG$ 48 free_frm> writing to fr id 8 to bs 0, offset 0
DBG$ 48 free_frm> before freeing a frame
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1011
# of used frames: 13
# of page frames: 5
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 init_frm> start
DBG$ 48 init_frm> frame 8 initialized
DBG$ 48 init_frm> end
DBG$ 48 free_frm> fr id 8 changed to FREE
DBG$ 48 free_frm> after freeing a frame
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1012
# of used frames: 12
# of page frames: 4
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 free_frm> returning OK
DBG$ 48 free_frm> end
DBG$ 48 dec_frm_refcount> end
DBG$ 48 update_pgt> start
DBG$ 48 update_pgt> in_pid 48
DBG$ 48 update_pgt> fr id 8 is free
DBG$ 48 update_pgt> returning FALSE
DBG$ 48 update_pgt> end
DBG$ 48 bsm_remove_frm> decrementing refcount for fr id 9, bs id 0, bs offset 1, pid 48
DBG$ 48 dec_frm_refcount> start
DBG$ 48 dec_frm_refcount> fr id 9 refcount decremented to 0
DBG$ 48 dec_frm_refcount> fr id 9 refcount reached 0.. freeing the frame
DBG$ 48 free_frm> start
DBG$ 48 print_frm_id> start

*** FRAME INFORMATION START ***
Frame ID     : 9
Frame status : In Use
Frame PID    : -1
Frame vpage  : 0
Frame refcnt : 0
Frame type   : Data page
Frame BS     : 0
Frame offset : 1
*** FRAME INFORMATION END ***

DBG$ 48 print_frm_id> end
DBG$ 48 update_pgt> start
DBG$ 48 update_pgt> in_pid -1
DBG$ 48 update_pgt> pid 48, pt id 4, page id 1
DBG$ 48 dec_frm_refcount> start
DBG$ 48 dec_frm_refcount> fr id 7 refcount decremented to 3
DBG$ 48 dec_frm_refcount> end
DBG$ 48 update_pgt> pid 48, pt 4, page 1, fr id 9, dirty 1
DBG$ 48 update_pgt> clearing pres bit in pgt for pid 48, pgt 4, pg 1, fr id 9
DBG$ 48 update_pgt> pid 48, pt id 4, page id 2
DBG$ 48 update_pgt> pid 48, pt id 4, page id 3
DBG$ 48 update_pgt> pid 48, pt id 4, page id 4
DBG$ 48 enable_paging> start
DBG$ 48 enable_paging> end
DBG$ 48 update_pgt> end
DBG$ 48 write_bs> start
DBG$ 48 write_bs> end
DBG$ 48 free_frm> writing to fr id 9 to bs 0, offset 1
DBG$ 48 free_frm> before freeing a frame
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1012
# of used frames: 12
# of page frames: 4
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 init_frm> start
DBG$ 48 init_frm> frame 9 initialized
DBG$ 48 init_frm> end
DBG$ 48 free_frm> fr id 9 changed to FREE
DBG$ 48 free_frm> after freeing a frame
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1013
# of used frames: 11
# of page frames: 3
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 free_frm> returning OK
DBG$ 48 free_frm> end
DBG$ 48 dec_frm_refcount> end
DBG$ 48 update_pgt> start
DBG$ 48 update_pgt> in_pid 48
DBG$ 48 update_pgt> fr id 9 is free
DBG$ 48 update_pgt> returning FALSE
DBG$ 48 update_pgt> end
DBG$ 48 bsm_remove_frm> decrementing refcount for fr id 10, bs id 0, bs offset 2, pid 48
DBG$ 48 dec_frm_refcount> start
DBG$ 48 dec_frm_refcount> fr id 10 refcount decremented to 0
DBG$ 48 dec_frm_refcount> fr id 10 refcount reached 0.. freeing the frame
DBG$ 48 free_frm> start
DBG$ 48 print_frm_id> start

*** FRAME INFORMATION START ***
Frame ID     : 10
Frame status : In Use
Frame PID    : -1
Frame vpage  : 0
Frame refcnt : 0
Frame type   : Data page
Frame BS     : 0
Frame offset : 2
*** FRAME INFORMATION END ***

DBG$ 48 print_frm_id> end
DBG$ 48 update_pgt> start
DBG$ 48 update_pgt> in_pid -1
DBG$ 48 update_pgt> pid 48, pt id 4, page id 2
DBG$ 48 dec_frm_refcount> start
DBG$ 48 dec_frm_refcount> fr id 7 refcount decremented to 2
DBG$ 48 dec_frm_refcount> end
DBG$ 48 update_pgt> pid 48, pt 4, page 2, fr id 10, dirty 1
DBG$ 48 update_pgt> clearing pres bit in pgt for pid 48, pgt 4, pg 2, fr id 10
DBG$ 48 update_pgt> pid 48, pt id 4, page id 3
DBG$ 48 update_pgt> pid 48, pt id 4, page id 4
DBG$ 48 enable_paging> start
DBG$ 48 enable_paging> end
DBG$ 48 update_pgt> end
DBG$ 48 write_bs> start
DBG$ 48 write_bs> end
DBG$ 48 free_frm> writing to fr id 10 to bs 0, offset 2
DBG$ 48 free_frm> before freeing a frame
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1013
# of used frames: 11
# of page frames: 3
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 init_frm> start
DBG$ 48 init_frm> frame 10 initialized
DBG$ 48 init_frm> end
DBG$ 48 free_frm> fr id 10 changed to FREE
DBG$ 48 free_frm> after freeing a frame
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1014
# of used frames: 10
# of page frames: 2
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 free_frm> returning OK
DBG$ 48 free_frm> end
DBG$ 48 dec_frm_refcount> end
DBG$ 48 update_pgt> start
DBG$ 48 update_pgt> in_pid 48
DBG$ 48 update_pgt> fr id 10 is free
DBG$ 48 update_pgt> returning FALSE
DBG$ 48 update_pgt> end
DBG$ 48 bsm_remove_frm> decrementing refcount for fr id 11, bs id 0, bs offset 3, pid 48
DBG$ 48 dec_frm_refcount> start
DBG$ 48 dec_frm_refcount> fr id 11 refcount decremented to 0
DBG$ 48 dec_frm_refcount> fr id 11 refcount reached 0.. freeing the frame
DBG$ 48 free_frm> start
DBG$ 48 print_frm_id> start

*** FRAME INFORMATION START ***
Frame ID     : 11
Frame status : In Use
Frame PID    : -1
Frame vpage  : 0
Frame refcnt : 0
Frame type   : Data page
Frame BS     : 0
Frame offset : 3
*** FRAME INFORMATION END ***

DBG$ 48 print_frm_id> end
DBG$ 48 update_pgt> start
DBG$ 48 update_pgt> in_pid -1
DBG$ 48 update_pgt> pid 48, pt id 4, page id 3
DBG$ 48 dec_frm_refcount> start
DBG$ 48 dec_frm_refcount> fr id 7 refcount decremented to 1
DBG$ 48 dec_frm_refcount> end
DBG$ 48 update_pgt> pid 48, pt 4, page 3, fr id 11, dirty 1
DBG$ 48 update_pgt> clearing pres bit in pgt for pid 48, pgt 4, pg 3, fr id 11
DBG$ 48 update_pgt> pid 48, pt id 4, page id 4
DBG$ 48 enable_paging> start
DBG$ 48 enable_paging> end
DBG$ 48 update_pgt> end
DBG$ 48 write_bs> start
DBG$ 48 write_bs> end
DBG$ 48 free_frm> writing to fr id 11 to bs 0, offset 3
DBG$ 48 free_frm> before freeing a frame
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1014
# of used frames: 10
# of page frames: 2
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 init_frm> start
DBG$ 48 init_frm> frame 11 initialized
DBG$ 48 init_frm> end
DBG$ 48 free_frm> fr id 11 changed to FREE
DBG$ 48 free_frm> after freeing a frame
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1015
# of used frames: 9
# of page frames: 1
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 free_frm> returning OK
DBG$ 48 free_frm> end
DBG$ 48 dec_frm_refcount> end
DBG$ 48 update_pgt> start
DBG$ 48 update_pgt> in_pid 48
DBG$ 48 update_pgt> fr id 11 is free
DBG$ 48 update_pgt> returning FALSE
DBG$ 48 update_pgt> end
DBG$ 48 bsm_remove_frm> decrementing refcount for fr id 12, bs id 0, bs offset 4, pid 48
DBG$ 48 dec_frm_refcount> start
DBG$ 48 dec_frm_refcount> fr id 12 refcount decremented to 0
DBG$ 48 dec_frm_refcount> fr id 12 refcount reached 0.. freeing the frame
DBG$ 48 free_frm> start
DBG$ 48 print_frm_id> start

*** FRAME INFORMATION START ***
Frame ID     : 12
Frame status : In Use
Frame PID    : -1
Frame vpage  : 0
Frame refcnt : 0
Frame type   : Data page
Frame BS     : 0
Frame offset : 4
*** FRAME INFORMATION END ***

DBG$ 48 print_frm_id> end
DBG$ 48 update_pgt> start
DBG$ 48 update_pgt> in_pid -1
DBG$ 48 update_pgt> pid 48, pt id 4, page id 4
DBG$ 48 dec_frm_refcount> start
DBG$ 48 dec_frm_refcount> fr id 7 refcount decremented to 0
DBG$ 48 dec_frm_refcount> fr id 7 refcount reached 0.. freeing the frame
DBG$ 48 free_frm> start
DBG$ 48 print_frm_id> start

*** FRAME INFORMATION START ***
Frame ID     : 7
Frame status : In Use
Frame PID    : 48
Frame vpage  : 0
Frame refcnt : 0
Frame type   : Table page
Frame BS     : -1
Frame offset : -1
*** FRAME INFORMATION END ***

DBG$ 48 print_frm_id> end
DBG$ 48 update_pgt> start
DBG$ 48 update_pgt> in_pid -1
DBG$ 48 update_pgt> fr id 7 isn't a data frame.. type 2
DBG$ 48 update_pgt> returning FALSE
DBG$ 48 update_pgt> end
DBG$ 48 free_frm> before freeing a frame
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1015
# of used frames: 9
# of page frames: 1
# of pt frames: 5
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 init_frm> start
DBG$ 48 init_frm> frame 7 initialized
DBG$ 48 init_frm> end
DBG$ 48 free_frm> fr id 7 changed to FREE
DBG$ 48 free_frm> after freeing a frame
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1016
# of used frames: 8
# of page frames: 1
# of pt frames: 4
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 free_frm> returning OK
DBG$ 48 free_frm> end
DBG$ 48 dec_frm_refcount> end
DBG$ 48 update_pgt> pid 48, pt 4, page 4, fr id 12, dirty 1
DBG$ 48 update_pgt> clearing pres bit in pgt for pid 48, pgt 4, pg 4, fr id 12
DBG$ 48 update_pgt> clearing pres bit in pgd for pid 48, pt 4, fr id  7
DBG$ 48 enable_paging> start
DBG$ 48 enable_paging> end
DBG$ 48 update_pgt> end
DBG$ 48 write_bs> start
DBG$ 48 write_bs> end
DBG$ 48 free_frm> writing to fr id 12 to bs 0, offset 4
DBG$ 48 free_frm> before freeing a frame
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1016
# of used frames: 8
# of page frames: 1
# of pt frames: 4
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 init_frm> start
DBG$ 48 init_frm> frame 12 initialized
DBG$ 48 init_frm> end
DBG$ 48 free_frm> fr id 12 changed to FREE
DBG$ 48 free_frm> after freeing a frame
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1017
# of used frames: 7
# of page frames: 0
# of pt frames: 4
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 free_frm> returning OK
DBG$ 48 free_frm> end
DBG$ 48 dec_frm_refcount> end
DBG$ 48 update_pgt> start
DBG$ 48 update_pgt> in_pid 48
DBG$ 48 update_pgt> fr id 12 is free
DBG$ 48 update_pgt> returning FALSE
DBG$ 48 update_pgt> end
DBG$ 48 bsm_remove_frm> returning OK
DBG$ 48 bsm_remove_frm> end
DBG$ 48 bsm_remove_proc_maps> vheap bsm_remove_frm success
DBG$ 48 bsm_unmap> start
DBG$ 48 bsm_lookup> start
DBG$ 48 bsm_lookup> store 0, offset 0 for pid 48, vaddr 0x01000000, vpage 4096
DBG$ 48 bsm_lookup> end
DBG$ 48 bsm_unmap> pid 48, vpage 4096 is mapped to bs id 0
DBG$ 48 print_bs_details> start

*** BS INFORMATION START ***
BS id: 0
State: Mapped
VHeap: Yes
Total maps: 1
   PID: 48
   VPage: 4096
   NPages: 100
*** BS INFORMATION END ***

DBG$ 48 print_bs_details> end
DBG$ 48 bsm_unmap> only one node
DBG$ 48 bsm_unmap> bs unmapping of pid 48, bs id 0, vpage 4096, is successful
DBG$ 48 bsm_unmap> chaning bs id state to unmapped as there are no associated processes
DBG$ 48 print_bs_details> start

*** BS INFORMATION START ***
BS id: 0
State: Unmapped
VHeap: No
Total maps: 0
*** BS INFORMATION END ***

DBG$ 48 print_bs_details> end
DBG$ 48 bsm_unmap> end
DBG$ 48 bsm_remove_proc_maps> vheap bsm_unmap success
DBG$ 48 bsm_remove_proc_maps> pid 48 vheap bs id 0 is now free
DBG$ 48 bsm_remove_proc_maps> end
DBG$ 48 remove_pgd> start
DBG$ 48 free_frm> start
DBG$ 48 print_frm_id> start

*** FRAME INFORMATION START ***
Frame ID     : 6
Frame status : In Use
Frame PID    : -1
Frame vpage  : 0
Frame refcnt : 0
Frame type   : Dir page
Frame BS     : -1
Frame offset : -1
*** FRAME INFORMATION END ***

DBG$ 48 print_frm_id> end
DBG$ 48 update_pgt> start
DBG$ 48 update_pgt> in_pid -1
DBG$ 48 update_pgt> fr id 6 isn't a data frame.. type 3
DBG$ 48 update_pgt> returning FALSE
DBG$ 48 update_pgt> end
DBG$ 48 free_frm> before freeing a frame
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1017
# of used frames: 7
# of page frames: 0
# of pt frames: 4
# of pd frames: 3
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 init_frm> start
DBG$ 48 init_frm> frame 6 initialized
DBG$ 48 init_frm> end
DBG$ 48 free_frm> fr id 6 changed to FREE
DBG$ 48 free_frm> after freeing a frame
DBG$ 48 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1018
# of used frames: 6
# of page frames: 0
# of pt frames: 4
# of pd frames: 2
*** FRAME DEBUG DATA END ***

DBG$ 48 print_frm_data> end
DBG$ 48 free_frm> returning OK
DBG$ 48 free_frm> end
DBG$ 48 remove_pgd> end
DBG$ 48 bsm_handle_proc_kill> end
DBG$ 48 kill> after bsm_handle_proc_kill()
DBG$ 0 set_pdbr> start
DBG$ 0 set_pdbr> pd_addr after ls 0x00404000
DBG$ 0 set_pdbr> end
DBG$ 49 set_pdbr> start
DBG$ 49 set_pdbr> pd_addr after ls 0x00405000
DBG$ 49 set_pdbr> end
after newproc in main.. 
0x00800000: A
0x00801000: B
0x00802000: C
0x00803000: D
0x00804000: E


All user processes have completed.

DBG$ 49 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1018
# of used frames: 6
# of page frames: 0
# of pt frames: 4
# of pd frames: 2
*** FRAME DEBUG DATA END ***

DBG$ 49 print_frm_data> end
DBG$ 49 kill> before bsm_handle_proc_kill()
DBG$ 49 bsm_handle_proc_kill> start
DBG$ 49 bsm_remove_proc_maps> start
DBG$ 49 bsm_remove_proc_maps> end
DBG$ 49 remove_pgd> start
DBG$ 49 free_frm> start
DBG$ 49 print_frm_id> start

*** FRAME INFORMATION START ***
Frame ID     : 5
Frame status : In Use
Frame PID    : -1
Frame vpage  : 0
Frame refcnt : 0
Frame type   : Dir page
Frame BS     : -1
Frame offset : -1
*** FRAME INFORMATION END ***

DBG$ 49 print_frm_id> end
DBG$ 49 update_pgt> start
DBG$ 49 update_pgt> in_pid -1
DBG$ 49 update_pgt> fr id 5 isn't a data frame.. type 3
DBG$ 49 update_pgt> returning FALSE
DBG$ 49 update_pgt> end
DBG$ 49 free_frm> before freeing a frame
DBG$ 49 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1018
# of used frames: 6
# of page frames: 0
# of pt frames: 4
# of pd frames: 2
*** FRAME DEBUG DATA END ***

DBG$ 49 print_frm_data> end
DBG$ 49 init_frm> start
DBG$ 49 init_frm> frame 5 initialized
DBG$ 49 init_frm> end
DBG$ 49 free_frm> fr id 5 changed to FREE
DBG$ 49 free_frm> after freeing a frame
DBG$ 49 print_frm_data> start

*** FRAME DEBUG DATA START ***
# of free frames: 1019
# of used frames: 5
# of page frames: 0
# of pt frames: 4
# of pd frames: 1
*** FRAME DEBUG DATA END ***

DBG$ 49 print_frm_data> end
DBG$ 49 free_frm> returning OK
DBG$ 49 free_frm> end
DBG$ 49 remove_pgd> end
DBG$ 49 bsm_handle_proc_kill> end
DBG$ 49 kill> after bsm_handle_proc_kill()
DBG$ 0 set_pdbr> start
DBG$ 0 set_pdbr> pd_addr after ls 0x00404000
DBG$ 0 set_pdbr> end

-------------------------------------------------------------------------------
connection 'backend', class 'vmware', host 'blade1g6-6'
Client (tcp-l) 0 (fd: 5) joined


(command-mode) d
file: xinu.elf
connection 'backend-dl', class 'DOWNLOAD', host 'blade1g6-6'
84 -rw-rw-rw- 1 root 78297 Mar 30 backend
cp-bootable complete



(command-mode) p
connection 'backend-pc', class 'POWERCYCLE', host 'blade1g6-6'

Client (named) 1 (fd: 6) joined
                               system running up!


PC Xinu (CSC501 1-2009 base) #1 (adhanas@bn16-142.dcs.mcnc.org) Sun Mar 30 03:40:18 EDT 2014

4194304 bytes real mem
125419 bytes Xinu code
clock enabled
before newproc in main.. 
0x00800000: 
0x00801000: 
0x00802000: 
0x00803000: 
0x00804000: 
vloc in  is 0x003fdfec
data in procA..
0x01000000: A
0x01001000: B
0x01002000: C
0x01003000: D
0x01004000: E
after newproc in main.. 
0x00800000: A
0x00801000: B
0x00802000: C
0x00803000: D
0x00804000: E


All user processes have completed.




